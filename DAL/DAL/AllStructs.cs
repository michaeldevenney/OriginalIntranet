using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DALRemote
{
	#region Tables Struct
	public partial struct Tables
	{
		
		public static readonly string ProjectsExt = @"A_ProjectsExt";
        
		public static readonly string AppSettingsExt = @"AppSettingsExt";
        
		public static readonly string LookupsExt = @"L_LookupsExt";
        
		public static readonly string PhysicsBasisExt = @"L_PhysicsBasisExt";
        
		public static readonly string ProspectRoomExt = @"ProspectRoomExt";
        
		public static readonly string ProspectusExt = @"ProspectusExt";
        
		public static readonly string ProspectusLinkRequestExt = @"ProspectusLinkRequestExt";
        
		public static readonly string URLTagsExt = @"URLTagsExt";
        
		public static readonly string URLTagVisitsExt = @"URLTagVisitsExt";
        
		public static readonly string UsersExt = @"UsersExt";
        
	}
	#endregion
    #region Schemas
    public partial class Schemas {
		
		public static TableSchema.Table ProjectsExt
		{
            get { return DataService.GetSchema("A_ProjectsExt", "External"); }
		}
        
		public static TableSchema.Table AppSettingsExt
		{
            get { return DataService.GetSchema("AppSettingsExt", "External"); }
		}
        
		public static TableSchema.Table LookupsExt
		{
            get { return DataService.GetSchema("L_LookupsExt", "External"); }
		}
        
		public static TableSchema.Table PhysicsBasisExt
		{
            get { return DataService.GetSchema("L_PhysicsBasisExt", "External"); }
		}
        
		public static TableSchema.Table ProspectRoomExt
		{
            get { return DataService.GetSchema("ProspectRoomExt", "External"); }
		}
        
		public static TableSchema.Table ProspectusExt
		{
            get { return DataService.GetSchema("ProspectusExt", "External"); }
		}
        
		public static TableSchema.Table ProspectusLinkRequestExt
		{
            get { return DataService.GetSchema("ProspectusLinkRequestExt", "External"); }
		}
        
		public static TableSchema.Table URLTagsExt
		{
            get { return DataService.GetSchema("URLTagsExt", "External"); }
		}
        
		public static TableSchema.Table URLTagVisitsExt
		{
            get { return DataService.GetSchema("URLTagVisitsExt", "External"); }
		}
        
		public static TableSchema.Table UsersExt
		{
            get { return DataService.GetSchema("UsersExt", "External"); }
		}
        
	
    }
    #endregion
    #region View Struct
    public partial struct Views 
    {
		
    }
    #endregion
    
    #region Query Factories
	public static partial class DB
	{
        public static DataProvider _provider = DataService.Providers["External"];
        static ISubSonicRepository _repository;
        public static ISubSonicRepository Repository 
        {
            get 
            {
                if (_repository == null)
                    return new SubSonicRepository(_provider);
                return _repository; 
            }
            set { _repository = value; }
        }
        public static Select SelectAllColumnsFrom<T>() where T : RecordBase<T>, new()
	    {
            return Repository.SelectAllColumnsFrom<T>();
	    }
	    public static Select Select()
	    {
            return Repository.Select();
	    }
	    
		public static Select Select(params string[] columns)
		{
            return Repository.Select(columns);
        }
	    
		public static Select Select(params Aggregate[] aggregates)
		{
            return Repository.Select(aggregates);
        }
   
	    public static Update Update<T>() where T : RecordBase<T>, new()
	    {
            return Repository.Update<T>();
	    }
	    
	    public static Insert Insert()
	    {
            return Repository.Insert();
	    }
	    
	    public static Delete Delete()
	    {
            return Repository.Delete();
	    }
	    
	    public static InlineQuery Query()
	    {
            return Repository.Query();
	    }
	    	    
	    
	}
    #endregion
    
}
// <auto-generated />
namespace DAL
{
	#region Tables Struct
	public partial struct Tables
	{
		
		public static readonly string Project = @"A_Projects";
        
		public static readonly string AppSetting = @"AppSettings";
        
		public static readonly string EstimateItem = @"EstimateItems";
        
		public static readonly string Estimate = @"Estimates";
        
		public static readonly string EstimateTimeline = @"EstimateTimeline";
        
		public static readonly string Lookup = @"L_Lookups";
        
		public static readonly string PhysicsBasi = @"L_PhysicsBasis";
        
		public static readonly string TakeoffDetail = @"PM_TakeoffDetail";
        
		public static readonly string TakeoffInfo = @"PM_TakeoffInfo";
        
		public static readonly string ProspectRoom = @"ProspectRoom";
        
		public static readonly string Prospectu = @"Prospectus";
        
		public static readonly string ProspectusLinkRequest = @"ProspectusLinkRequest";
        
		public static readonly string Report = @"Reports";
        
		public static readonly string URLTag = @"URLTags";
        
		public static readonly string URLTagVisit = @"URLTagVisits";
        
		public static readonly string User = @"Users";
        
		public static readonly string Workflow = @"Workflow";
        
	}
	#endregion
    #region Schemas
    public partial class Schemas {
		
		public static TableSchema.Table Project
		{
            get { return DataService.GetSchema("A_Projects", "Internal"); }
		}
        
		public static TableSchema.Table AppSetting
		{
            get { return DataService.GetSchema("AppSettings", "Internal"); }
		}
        
		public static TableSchema.Table EstimateItem
		{
            get { return DataService.GetSchema("EstimateItems", "Internal"); }
		}
        
		public static TableSchema.Table Estimate
		{
            get { return DataService.GetSchema("Estimates", "Internal"); }
		}
        
		public static TableSchema.Table EstimateTimeline
		{
            get { return DataService.GetSchema("EstimateTimeline", "Internal"); }
		}
        
		public static TableSchema.Table Lookup
		{
            get { return DataService.GetSchema("L_Lookups", "Internal"); }
		}
        
		public static TableSchema.Table PhysicsBasi
		{
            get { return DataService.GetSchema("L_PhysicsBasis", "Internal"); }
		}
        
		public static TableSchema.Table TakeoffDetail
		{
            get { return DataService.GetSchema("PM_TakeoffDetail", "Internal"); }
		}
        
		public static TableSchema.Table TakeoffInfo
		{
            get { return DataService.GetSchema("PM_TakeoffInfo", "Internal"); }
		}
        
		public static TableSchema.Table ProspectRoom
		{
            get { return DataService.GetSchema("ProspectRoom", "Internal"); }
		}
        
		public static TableSchema.Table Prospectu
		{
            get { return DataService.GetSchema("Prospectus", "Internal"); }
		}
        
		public static TableSchema.Table ProspectusLinkRequest
		{
            get { return DataService.GetSchema("ProspectusLinkRequest", "Internal"); }
		}
        
		public static TableSchema.Table Report
		{
            get { return DataService.GetSchema("Reports", "Internal"); }
		}
        
		public static TableSchema.Table URLTag
		{
            get { return DataService.GetSchema("URLTags", "Internal"); }
		}
        
		public static TableSchema.Table URLTagVisit
		{
            get { return DataService.GetSchema("URLTagVisits", "Internal"); }
		}
        
		public static TableSchema.Table User
		{
            get { return DataService.GetSchema("Users", "Internal"); }
		}
        
		public static TableSchema.Table Workflow
		{
            get { return DataService.GetSchema("Workflow", "Internal"); }
		}
        
	
    }
    #endregion
    #region View Struct
    public partial struct Views 
    {
		
		public static readonly string Testing = @"_TESTING";
        
		public static readonly string ActiveEstimateForReporting = @"ActiveEstimateForReporting";
        
		public static readonly string ActiveEstimatesWithActivityLastWeek = @"ActiveEstimatesWithActivityLastWeek";
        
		public static readonly string ActiveEstimatesWithActivityThisWeek = @"ActiveEstimatesWithActivityThisWeek";
        
		public static readonly string ActiveEstimatesWithNoActivityLastWeek = @"ActiveEstimatesWithNoActivityLastWeek";
        
		public static readonly string ActiveLeadProjectDisplayList = @"ActiveLeadProjectDisplayList";
        
		public static readonly string ActiveLead = @"ActiveLeads";
        
		public static readonly string ActiveProject = @"ActiveProjects";
        
		public static readonly string ActiveUser = @"ActiveUsers";
        
		public static readonly string AllProject = @"AllProjects";
        
		public static readonly string EstimateDisplay = @"EstimateDisplay";
        
		public static readonly string EstimatesActive = @"EstimatesActive";
        
		public static readonly string EstimatesAll = @"EstimatesAll";
        
		public static readonly string EstimatesSalesQueue = @"EstimatesSalesQueue";
        
		public static readonly string EstimateTimelineAuditActive = @"EstimateTimelineAudit-Active";
        
		public static readonly string EstimateTimelineAuditAll = @"EstimateTimelineAudit-All";
        
		public static readonly string EstimateWorkflowDuration = @"EstimateWorkflowDurations";
        
		public static readonly string EstimatingDepartmentWeeklySummaryCurrent = @"EstimatingDepartmentWeeklySummaryCurrent";
        
		public static readonly string EstimatingDepartmentWeeklySummaryPrior = @"EstimatingDepartmentWeeklySummaryPrior";
        
		public static readonly string LeadsWithEstimateSent = @"LeadsWithEstimateSent";
        
		public static readonly string NextProjectNumber = @"NextProjectNumber";
        
		public static readonly string TaggedURLVisit = @"TaggedURLVisits";
        
		public static readonly string WeeklyEstimateSummary = @"WeeklyEstimateSummary";
        
		public static readonly string WeeklyEstimateSummaryLastWeek = @"WeeklyEstimateSummaryLastWeek";
        
    }
    #endregion
    
    #region Query Factories
	public static partial class DB
	{
        public static DataProvider _provider = DataService.Providers["Internal"];
        static ISubSonicRepository _repository;
        public static ISubSonicRepository Repository 
        {
            get 
            {
                if (_repository == null)
                    return new SubSonicRepository(_provider);
                return _repository; 
            }
            set { _repository = value; }
        }
        public static Select SelectAllColumnsFrom<T>() where T : RecordBase<T>, new()
	    {
            return Repository.SelectAllColumnsFrom<T>();
	    }
	    public static Select Select()
	    {
            return Repository.Select();
	    }
	    
		public static Select Select(params string[] columns)
		{
            return Repository.Select(columns);
        }
	    
		public static Select Select(params Aggregate[] aggregates)
		{
            return Repository.Select(aggregates);
        }
   
	    public static Update Update<T>() where T : RecordBase<T>, new()
	    {
            return Repository.Update<T>();
	    }
	    
	    public static Insert Insert()
	    {
            return Repository.Insert();
	    }
	    
	    public static Delete Delete()
	    {
            return Repository.Delete();
	    }
	    
	    public static InlineQuery Query()
	    {
            return Repository.Query();
	    }
	    	    
	    
	}
    #endregion
    
}
#region Databases
public partial struct Databases 
{
	
	public static readonly string External = @"External";
    
	public static readonly string Internal = @"Internal";
    
}
#endregion