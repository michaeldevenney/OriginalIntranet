using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL{
    /// <summary>
    /// Strongly-typed collection for the AllProject class.
    /// </summary>
    [Serializable]
    public partial class AllProjectCollection : ReadOnlyList<AllProject, AllProjectCollection>
    {        
        public AllProjectCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the AllProjects view.
    /// </summary>
    [Serializable]
    public partial class AllProject : ReadOnlyRecord<AllProject>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("AllProjects", TableType.View, DataService.GetInstance("Internal"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarProject = new TableSchema.TableColumn(schema);
                colvarProject.ColumnName = "Project";
                colvarProject.DataType = DbType.AnsiString;
                colvarProject.MaxLength = 203;
                colvarProject.AutoIncrement = false;
                colvarProject.IsNullable = false;
                colvarProject.IsPrimaryKey = false;
                colvarProject.IsForeignKey = false;
                colvarProject.IsReadOnly = false;
                
                schema.Columns.Add(colvarProject);
                
                TableSchema.TableColumn colvarProjectActivity = new TableSchema.TableColumn(schema);
                colvarProjectActivity.ColumnName = "ProjectActivity";
                colvarProjectActivity.DataType = DbType.AnsiString;
                colvarProjectActivity.MaxLength = 25;
                colvarProjectActivity.AutoIncrement = false;
                colvarProjectActivity.IsNullable = true;
                colvarProjectActivity.IsPrimaryKey = false;
                colvarProjectActivity.IsForeignKey = false;
                colvarProjectActivity.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectActivity);
                
                TableSchema.TableColumn colvarPMAssigned = new TableSchema.TableColumn(schema);
                colvarPMAssigned.ColumnName = "PMAssigned";
                colvarPMAssigned.DataType = DbType.AnsiString;
                colvarPMAssigned.MaxLength = 50;
                colvarPMAssigned.AutoIncrement = false;
                colvarPMAssigned.IsNullable = true;
                colvarPMAssigned.IsPrimaryKey = false;
                colvarPMAssigned.IsForeignKey = false;
                colvarPMAssigned.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMAssigned);
                
                TableSchema.TableColumn colvarPm = new TableSchema.TableColumn(schema);
                colvarPm.ColumnName = "PM";
                colvarPm.DataType = DbType.AnsiString;
                colvarPm.MaxLength = 50;
                colvarPm.AutoIncrement = false;
                colvarPm.IsNullable = false;
                colvarPm.IsPrimaryKey = false;
                colvarPm.IsForeignKey = false;
                colvarPm.IsReadOnly = false;
                
                schema.Columns.Add(colvarPm);
                
                TableSchema.TableColumn colvarSalesperson = new TableSchema.TableColumn(schema);
                colvarSalesperson.ColumnName = "Salesperson";
                colvarSalesperson.DataType = DbType.AnsiString;
                colvarSalesperson.MaxLength = 50;
                colvarSalesperson.AutoIncrement = false;
                colvarSalesperson.IsNullable = false;
                colvarSalesperson.IsPrimaryKey = false;
                colvarSalesperson.IsForeignKey = false;
                colvarSalesperson.IsReadOnly = false;
                
                schema.Columns.Add(colvarSalesperson);
                
                TableSchema.TableColumn colvarPhysicist = new TableSchema.TableColumn(schema);
                colvarPhysicist.ColumnName = "Physicist";
                colvarPhysicist.DataType = DbType.AnsiString;
                colvarPhysicist.MaxLength = 50;
                colvarPhysicist.AutoIncrement = false;
                colvarPhysicist.IsNullable = false;
                colvarPhysicist.IsPrimaryKey = false;
                colvarPhysicist.IsForeignKey = false;
                colvarPhysicist.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhysicist);
                
                TableSchema.TableColumn colvarDraftsman = new TableSchema.TableColumn(schema);
                colvarDraftsman.ColumnName = "Draftsman";
                colvarDraftsman.DataType = DbType.AnsiString;
                colvarDraftsman.MaxLength = 50;
                colvarDraftsman.AutoIncrement = false;
                colvarDraftsman.IsNullable = false;
                colvarDraftsman.IsPrimaryKey = false;
                colvarDraftsman.IsForeignKey = false;
                colvarDraftsman.IsReadOnly = false;
                
                schema.Columns.Add(colvarDraftsman);
                
                TableSchema.TableColumn colvarSalespersonID = new TableSchema.TableColumn(schema);
                colvarSalespersonID.ColumnName = "SalespersonID";
                colvarSalespersonID.DataType = DbType.Int32;
                colvarSalespersonID.MaxLength = 0;
                colvarSalespersonID.AutoIncrement = false;
                colvarSalespersonID.IsNullable = true;
                colvarSalespersonID.IsPrimaryKey = false;
                colvarSalespersonID.IsForeignKey = false;
                colvarSalespersonID.IsReadOnly = false;
                
                schema.Columns.Add(colvarSalespersonID);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Internal"].AddSchema("AllProjects",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public AllProject()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public AllProject(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public AllProject(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public AllProject(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Project")]
        [Bindable(true)]
        public string Project 
	    {
		    get
		    {
			    return GetColumnValue<string>("Project");
		    }
            set 
		    {
			    SetColumnValue("Project", value);
            }
        }
	      
        [XmlAttribute("ProjectActivity")]
        [Bindable(true)]
        public string ProjectActivity 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectActivity");
		    }
            set 
		    {
			    SetColumnValue("ProjectActivity", value);
            }
        }
	      
        [XmlAttribute("PMAssigned")]
        [Bindable(true)]
        public string PMAssigned 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMAssigned");
		    }
            set 
		    {
			    SetColumnValue("PMAssigned", value);
            }
        }
	      
        [XmlAttribute("Pm")]
        [Bindable(true)]
        public string Pm 
	    {
		    get
		    {
			    return GetColumnValue<string>("PM");
		    }
            set 
		    {
			    SetColumnValue("PM", value);
            }
        }
	      
        [XmlAttribute("Salesperson")]
        [Bindable(true)]
        public string Salesperson 
	    {
		    get
		    {
			    return GetColumnValue<string>("Salesperson");
		    }
            set 
		    {
			    SetColumnValue("Salesperson", value);
            }
        }
	      
        [XmlAttribute("Physicist")]
        [Bindable(true)]
        public string Physicist 
	    {
		    get
		    {
			    return GetColumnValue<string>("Physicist");
		    }
            set 
		    {
			    SetColumnValue("Physicist", value);
            }
        }
	      
        [XmlAttribute("Draftsman")]
        [Bindable(true)]
        public string Draftsman 
	    {
		    get
		    {
			    return GetColumnValue<string>("Draftsman");
		    }
            set 
		    {
			    SetColumnValue("Draftsman", value);
            }
        }
	      
        [XmlAttribute("SalespersonID")]
        [Bindable(true)]
        public int? SalespersonID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("SalespersonID");
		    }
            set 
		    {
			    SetColumnValue("SalespersonID", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Project = @"Project";
            
            public static string ProjectActivity = @"ProjectActivity";
            
            public static string PMAssigned = @"PMAssigned";
            
            public static string Pm = @"PM";
            
            public static string Salesperson = @"Salesperson";
            
            public static string Physicist = @"Physicist";
            
            public static string Draftsman = @"Draftsman";
            
            public static string SalespersonID = @"SalespersonID";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
