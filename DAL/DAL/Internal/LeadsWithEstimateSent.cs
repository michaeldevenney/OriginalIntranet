using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL{
    /// <summary>
    /// Strongly-typed collection for the LeadsWithEstimateSent class.
    /// </summary>
    [Serializable]
    public partial class LeadsWithEstimateSentCollection : ReadOnlyList<LeadsWithEstimateSent, LeadsWithEstimateSentCollection>
    {        
        public LeadsWithEstimateSentCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the LeadsWithEstimateSent view.
    /// </summary>
    [Serializable]
    public partial class LeadsWithEstimateSent : ReadOnlyRecord<LeadsWithEstimateSent>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("LeadsWithEstimateSent", TableType.View, DataService.GetInstance("Internal"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
                colvarId.ColumnName = "ID";
                colvarId.DataType = DbType.Int32;
                colvarId.MaxLength = 0;
                colvarId.AutoIncrement = false;
                colvarId.IsNullable = false;
                colvarId.IsPrimaryKey = false;
                colvarId.IsForeignKey = false;
                colvarId.IsReadOnly = false;
                
                schema.Columns.Add(colvarId);
                
                TableSchema.TableColumn colvarProjectNumber = new TableSchema.TableColumn(schema);
                colvarProjectNumber.ColumnName = "ProjectNumber";
                colvarProjectNumber.DataType = DbType.AnsiString;
                colvarProjectNumber.MaxLength = 100;
                colvarProjectNumber.AutoIncrement = false;
                colvarProjectNumber.IsNullable = false;
                colvarProjectNumber.IsPrimaryKey = false;
                colvarProjectNumber.IsForeignKey = false;
                colvarProjectNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectNumber);
                
                TableSchema.TableColumn colvarProjectName = new TableSchema.TableColumn(schema);
                colvarProjectName.ColumnName = "ProjectName";
                colvarProjectName.DataType = DbType.AnsiString;
                colvarProjectName.MaxLength = 100;
                colvarProjectName.AutoIncrement = false;
                colvarProjectName.IsNullable = false;
                colvarProjectName.IsPrimaryKey = false;
                colvarProjectName.IsForeignKey = false;
                colvarProjectName.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectName);
                
                TableSchema.TableColumn colvarHospitalClinicName = new TableSchema.TableColumn(schema);
                colvarHospitalClinicName.ColumnName = "HospitalClinicName";
                colvarHospitalClinicName.DataType = DbType.AnsiString;
                colvarHospitalClinicName.MaxLength = 1000;
                colvarHospitalClinicName.AutoIncrement = false;
                colvarHospitalClinicName.IsNullable = true;
                colvarHospitalClinicName.IsPrimaryKey = false;
                colvarHospitalClinicName.IsForeignKey = false;
                colvarHospitalClinicName.IsReadOnly = false;
                
                schema.Columns.Add(colvarHospitalClinicName);
                
                TableSchema.TableColumn colvarProjectLead = new TableSchema.TableColumn(schema);
                colvarProjectLead.ColumnName = "ProjectLead";
                colvarProjectLead.DataType = DbType.AnsiString;
                colvarProjectLead.MaxLength = 10;
                colvarProjectLead.AutoIncrement = false;
                colvarProjectLead.IsNullable = true;
                colvarProjectLead.IsPrimaryKey = false;
                colvarProjectLead.IsForeignKey = false;
                colvarProjectLead.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectLead);
                
                TableSchema.TableColumn colvarProjectType = new TableSchema.TableColumn(schema);
                colvarProjectType.ColumnName = "ProjectType";
                colvarProjectType.DataType = DbType.AnsiString;
                colvarProjectType.MaxLength = 25;
                colvarProjectType.AutoIncrement = false;
                colvarProjectType.IsNullable = true;
                colvarProjectType.IsPrimaryKey = false;
                colvarProjectType.IsForeignKey = false;
                colvarProjectType.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectType);
                
                TableSchema.TableColumn colvarProjectPhase = new TableSchema.TableColumn(schema);
                colvarProjectPhase.ColumnName = "ProjectPhase";
                colvarProjectPhase.DataType = DbType.AnsiString;
                colvarProjectPhase.MaxLength = 15;
                colvarProjectPhase.AutoIncrement = false;
                colvarProjectPhase.IsNullable = true;
                colvarProjectPhase.IsPrimaryKey = false;
                colvarProjectPhase.IsForeignKey = false;
                colvarProjectPhase.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectPhase);
                
                TableSchema.TableColumn colvarProjectActivity = new TableSchema.TableColumn(schema);
                colvarProjectActivity.ColumnName = "ProjectActivity";
                colvarProjectActivity.DataType = DbType.AnsiString;
                colvarProjectActivity.MaxLength = 25;
                colvarProjectActivity.AutoIncrement = false;
                colvarProjectActivity.IsNullable = true;
                colvarProjectActivity.IsPrimaryKey = false;
                colvarProjectActivity.IsForeignKey = false;
                colvarProjectActivity.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectActivity);
                
                TableSchema.TableColumn colvarLocation = new TableSchema.TableColumn(schema);
                colvarLocation.ColumnName = "Location";
                colvarLocation.DataType = DbType.AnsiString;
                colvarLocation.MaxLength = 50;
                colvarLocation.AutoIncrement = false;
                colvarLocation.IsNullable = true;
                colvarLocation.IsPrimaryKey = false;
                colvarLocation.IsForeignKey = false;
                colvarLocation.IsReadOnly = false;
                
                schema.Columns.Add(colvarLocation);
                
                TableSchema.TableColumn colvarPMUserID = new TableSchema.TableColumn(schema);
                colvarPMUserID.ColumnName = "PMUserID";
                colvarPMUserID.DataType = DbType.Int32;
                colvarPMUserID.MaxLength = 0;
                colvarPMUserID.AutoIncrement = false;
                colvarPMUserID.IsNullable = true;
                colvarPMUserID.IsPrimaryKey = false;
                colvarPMUserID.IsForeignKey = false;
                colvarPMUserID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMUserID);
                
                TableSchema.TableColumn colvarSalespersonID = new TableSchema.TableColumn(schema);
                colvarSalespersonID.ColumnName = "SalespersonID";
                colvarSalespersonID.DataType = DbType.Int32;
                colvarSalespersonID.MaxLength = 0;
                colvarSalespersonID.AutoIncrement = false;
                colvarSalespersonID.IsNullable = true;
                colvarSalespersonID.IsPrimaryKey = false;
                colvarSalespersonID.IsForeignKey = false;
                colvarSalespersonID.IsReadOnly = false;
                
                schema.Columns.Add(colvarSalespersonID);
                
                TableSchema.TableColumn colvarPMAssigned = new TableSchema.TableColumn(schema);
                colvarPMAssigned.ColumnName = "PMAssigned";
                colvarPMAssigned.DataType = DbType.AnsiString;
                colvarPMAssigned.MaxLength = 50;
                colvarPMAssigned.AutoIncrement = false;
                colvarPMAssigned.IsNullable = true;
                colvarPMAssigned.IsPrimaryKey = false;
                colvarPMAssigned.IsForeignKey = false;
                colvarPMAssigned.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMAssigned);
                
                TableSchema.TableColumn colvarDirectoryPath = new TableSchema.TableColumn(schema);
                colvarDirectoryPath.ColumnName = "DirectoryPath";
                colvarDirectoryPath.DataType = DbType.AnsiString;
                colvarDirectoryPath.MaxLength = -1;
                colvarDirectoryPath.AutoIncrement = false;
                colvarDirectoryPath.IsNullable = true;
                colvarDirectoryPath.IsPrimaryKey = false;
                colvarDirectoryPath.IsForeignKey = false;
                colvarDirectoryPath.IsReadOnly = false;
                
                schema.Columns.Add(colvarDirectoryPath);
                
                TableSchema.TableColumn colvarDirectoryPathExec = new TableSchema.TableColumn(schema);
                colvarDirectoryPathExec.ColumnName = "DirectoryPathExec";
                colvarDirectoryPathExec.DataType = DbType.AnsiString;
                colvarDirectoryPathExec.MaxLength = -1;
                colvarDirectoryPathExec.AutoIncrement = false;
                colvarDirectoryPathExec.IsNullable = true;
                colvarDirectoryPathExec.IsPrimaryKey = false;
                colvarDirectoryPathExec.IsForeignKey = false;
                colvarDirectoryPathExec.IsReadOnly = false;
                
                schema.Columns.Add(colvarDirectoryPathExec);
                
                TableSchema.TableColumn colvarCreated = new TableSchema.TableColumn(schema);
                colvarCreated.ColumnName = "Created";
                colvarCreated.DataType = DbType.DateTime;
                colvarCreated.MaxLength = 0;
                colvarCreated.AutoIncrement = false;
                colvarCreated.IsNullable = true;
                colvarCreated.IsPrimaryKey = false;
                colvarCreated.IsForeignKey = false;
                colvarCreated.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreated);
                
                TableSchema.TableColumn colvarWallDiagramFile = new TableSchema.TableColumn(schema);
                colvarWallDiagramFile.ColumnName = "WallDiagramFile";
                colvarWallDiagramFile.DataType = DbType.AnsiString;
                colvarWallDiagramFile.MaxLength = 100;
                colvarWallDiagramFile.AutoIncrement = false;
                colvarWallDiagramFile.IsNullable = true;
                colvarWallDiagramFile.IsPrimaryKey = false;
                colvarWallDiagramFile.IsForeignKey = false;
                colvarWallDiagramFile.IsReadOnly = false;
                
                schema.Columns.Add(colvarWallDiagramFile);
                
                TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
                colvarCreatedBy.ColumnName = "CreatedBy";
                colvarCreatedBy.DataType = DbType.AnsiString;
                colvarCreatedBy.MaxLength = 50;
                colvarCreatedBy.AutoIncrement = false;
                colvarCreatedBy.IsNullable = true;
                colvarCreatedBy.IsPrimaryKey = false;
                colvarCreatedBy.IsForeignKey = false;
                colvarCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedBy);
                
                TableSchema.TableColumn colvarUpdatedBy = new TableSchema.TableColumn(schema);
                colvarUpdatedBy.ColumnName = "UpdatedBy";
                colvarUpdatedBy.DataType = DbType.AnsiString;
                colvarUpdatedBy.MaxLength = 50;
                colvarUpdatedBy.AutoIncrement = false;
                colvarUpdatedBy.IsNullable = true;
                colvarUpdatedBy.IsPrimaryKey = false;
                colvarUpdatedBy.IsForeignKey = false;
                colvarUpdatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarUpdatedBy);
                
                TableSchema.TableColumn colvarUpdated = new TableSchema.TableColumn(schema);
                colvarUpdated.ColumnName = "Updated";
                colvarUpdated.DataType = DbType.DateTime;
                colvarUpdated.MaxLength = 0;
                colvarUpdated.AutoIncrement = false;
                colvarUpdated.IsNullable = true;
                colvarUpdated.IsPrimaryKey = false;
                colvarUpdated.IsForeignKey = false;
                colvarUpdated.IsReadOnly = false;
                
                schema.Columns.Add(colvarUpdated);
                
                TableSchema.TableColumn colvarRegion = new TableSchema.TableColumn(schema);
                colvarRegion.ColumnName = "Region";
                colvarRegion.DataType = DbType.AnsiString;
                colvarRegion.MaxLength = 50;
                colvarRegion.AutoIncrement = false;
                colvarRegion.IsNullable = true;
                colvarRegion.IsPrimaryKey = false;
                colvarRegion.IsForeignKey = false;
                colvarRegion.IsReadOnly = false;
                
                schema.Columns.Add(colvarRegion);
                
                TableSchema.TableColumn colvarDesignDraftsmanID = new TableSchema.TableColumn(schema);
                colvarDesignDraftsmanID.ColumnName = "DesignDraftsmanID";
                colvarDesignDraftsmanID.DataType = DbType.Int32;
                colvarDesignDraftsmanID.MaxLength = 0;
                colvarDesignDraftsmanID.AutoIncrement = false;
                colvarDesignDraftsmanID.IsNullable = true;
                colvarDesignDraftsmanID.IsPrimaryKey = false;
                colvarDesignDraftsmanID.IsForeignKey = false;
                colvarDesignDraftsmanID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDesignDraftsmanID);
                
                TableSchema.TableColumn colvarEngineeringConsultant = new TableSchema.TableColumn(schema);
                colvarEngineeringConsultant.ColumnName = "EngineeringConsultant";
                colvarEngineeringConsultant.DataType = DbType.AnsiString;
                colvarEngineeringConsultant.MaxLength = 100;
                colvarEngineeringConsultant.AutoIncrement = false;
                colvarEngineeringConsultant.IsNullable = true;
                colvarEngineeringConsultant.IsPrimaryKey = false;
                colvarEngineeringConsultant.IsForeignKey = false;
                colvarEngineeringConsultant.IsReadOnly = false;
                
                schema.Columns.Add(colvarEngineeringConsultant);
                
                TableSchema.TableColumn colvarPhysicistID = new TableSchema.TableColumn(schema);
                colvarPhysicistID.ColumnName = "PhysicistID";
                colvarPhysicistID.DataType = DbType.Int32;
                colvarPhysicistID.MaxLength = 0;
                colvarPhysicistID.AutoIncrement = false;
                colvarPhysicistID.IsNullable = true;
                colvarPhysicistID.IsPrimaryKey = false;
                colvarPhysicistID.IsForeignKey = false;
                colvarPhysicistID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhysicistID);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Internal"].AddSchema("LeadsWithEstimateSent",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public LeadsWithEstimateSent()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public LeadsWithEstimateSent(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public LeadsWithEstimateSent(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public LeadsWithEstimateSent(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("Id")]
        [Bindable(true)]
        public int Id 
	    {
		    get
		    {
			    return GetColumnValue<int>("ID");
		    }
            set 
		    {
			    SetColumnValue("ID", value);
            }
        }
	      
        [XmlAttribute("ProjectNumber")]
        [Bindable(true)]
        public string ProjectNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectNumber");
		    }
            set 
		    {
			    SetColumnValue("ProjectNumber", value);
            }
        }
	      
        [XmlAttribute("ProjectName")]
        [Bindable(true)]
        public string ProjectName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectName");
		    }
            set 
		    {
			    SetColumnValue("ProjectName", value);
            }
        }
	      
        [XmlAttribute("HospitalClinicName")]
        [Bindable(true)]
        public string HospitalClinicName 
	    {
		    get
		    {
			    return GetColumnValue<string>("HospitalClinicName");
		    }
            set 
		    {
			    SetColumnValue("HospitalClinicName", value);
            }
        }
	      
        [XmlAttribute("ProjectLead")]
        [Bindable(true)]
        public string ProjectLead 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectLead");
		    }
            set 
		    {
			    SetColumnValue("ProjectLead", value);
            }
        }
	      
        [XmlAttribute("ProjectType")]
        [Bindable(true)]
        public string ProjectType 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectType");
		    }
            set 
		    {
			    SetColumnValue("ProjectType", value);
            }
        }
	      
        [XmlAttribute("ProjectPhase")]
        [Bindable(true)]
        public string ProjectPhase 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectPhase");
		    }
            set 
		    {
			    SetColumnValue("ProjectPhase", value);
            }
        }
	      
        [XmlAttribute("ProjectActivity")]
        [Bindable(true)]
        public string ProjectActivity 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectActivity");
		    }
            set 
		    {
			    SetColumnValue("ProjectActivity", value);
            }
        }
	      
        [XmlAttribute("Location")]
        [Bindable(true)]
        public string Location 
	    {
		    get
		    {
			    return GetColumnValue<string>("Location");
		    }
            set 
		    {
			    SetColumnValue("Location", value);
            }
        }
	      
        [XmlAttribute("PMUserID")]
        [Bindable(true)]
        public int? PMUserID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PMUserID");
		    }
            set 
		    {
			    SetColumnValue("PMUserID", value);
            }
        }
	      
        [XmlAttribute("SalespersonID")]
        [Bindable(true)]
        public int? SalespersonID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("SalespersonID");
		    }
            set 
		    {
			    SetColumnValue("SalespersonID", value);
            }
        }
	      
        [XmlAttribute("PMAssigned")]
        [Bindable(true)]
        public string PMAssigned 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMAssigned");
		    }
            set 
		    {
			    SetColumnValue("PMAssigned", value);
            }
        }
	      
        [XmlAttribute("DirectoryPath")]
        [Bindable(true)]
        public string DirectoryPath 
	    {
		    get
		    {
			    return GetColumnValue<string>("DirectoryPath");
		    }
            set 
		    {
			    SetColumnValue("DirectoryPath", value);
            }
        }
	      
        [XmlAttribute("DirectoryPathExec")]
        [Bindable(true)]
        public string DirectoryPathExec 
	    {
		    get
		    {
			    return GetColumnValue<string>("DirectoryPathExec");
		    }
            set 
		    {
			    SetColumnValue("DirectoryPathExec", value);
            }
        }
	      
        [XmlAttribute("Created")]
        [Bindable(true)]
        public DateTime? Created 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Created");
		    }
            set 
		    {
			    SetColumnValue("Created", value);
            }
        }
	      
        [XmlAttribute("WallDiagramFile")]
        [Bindable(true)]
        public string WallDiagramFile 
	    {
		    get
		    {
			    return GetColumnValue<string>("WallDiagramFile");
		    }
            set 
		    {
			    SetColumnValue("WallDiagramFile", value);
            }
        }
	      
        [XmlAttribute("CreatedBy")]
        [Bindable(true)]
        public string CreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("CreatedBy");
		    }
            set 
		    {
			    SetColumnValue("CreatedBy", value);
            }
        }
	      
        [XmlAttribute("UpdatedBy")]
        [Bindable(true)]
        public string UpdatedBy 
	    {
		    get
		    {
			    return GetColumnValue<string>("UpdatedBy");
		    }
            set 
		    {
			    SetColumnValue("UpdatedBy", value);
            }
        }
	      
        [XmlAttribute("Updated")]
        [Bindable(true)]
        public DateTime? Updated 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Updated");
		    }
            set 
		    {
			    SetColumnValue("Updated", value);
            }
        }
	      
        [XmlAttribute("Region")]
        [Bindable(true)]
        public string Region 
	    {
		    get
		    {
			    return GetColumnValue<string>("Region");
		    }
            set 
		    {
			    SetColumnValue("Region", value);
            }
        }
	      
        [XmlAttribute("DesignDraftsmanID")]
        [Bindable(true)]
        public int? DesignDraftsmanID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("DesignDraftsmanID");
		    }
            set 
		    {
			    SetColumnValue("DesignDraftsmanID", value);
            }
        }
	      
        [XmlAttribute("EngineeringConsultant")]
        [Bindable(true)]
        public string EngineeringConsultant 
	    {
		    get
		    {
			    return GetColumnValue<string>("EngineeringConsultant");
		    }
            set 
		    {
			    SetColumnValue("EngineeringConsultant", value);
            }
        }
	      
        [XmlAttribute("PhysicistID")]
        [Bindable(true)]
        public int? PhysicistID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PhysicistID");
		    }
            set 
		    {
			    SetColumnValue("PhysicistID", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string Id = @"ID";
            
            public static string ProjectNumber = @"ProjectNumber";
            
            public static string ProjectName = @"ProjectName";
            
            public static string HospitalClinicName = @"HospitalClinicName";
            
            public static string ProjectLead = @"ProjectLead";
            
            public static string ProjectType = @"ProjectType";
            
            public static string ProjectPhase = @"ProjectPhase";
            
            public static string ProjectActivity = @"ProjectActivity";
            
            public static string Location = @"Location";
            
            public static string PMUserID = @"PMUserID";
            
            public static string SalespersonID = @"SalespersonID";
            
            public static string PMAssigned = @"PMAssigned";
            
            public static string DirectoryPath = @"DirectoryPath";
            
            public static string DirectoryPathExec = @"DirectoryPathExec";
            
            public static string Created = @"Created";
            
            public static string WallDiagramFile = @"WallDiagramFile";
            
            public static string CreatedBy = @"CreatedBy";
            
            public static string UpdatedBy = @"UpdatedBy";
            
            public static string Updated = @"Updated";
            
            public static string Region = @"Region";
            
            public static string DesignDraftsmanID = @"DesignDraftsmanID";
            
            public static string EngineeringConsultant = @"EngineeringConsultant";
            
            public static string PhysicistID = @"PhysicistID";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
