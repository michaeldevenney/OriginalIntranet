using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL{
    /// <summary>
    /// Strongly-typed collection for the EstimatesActive class.
    /// </summary>
    [Serializable]
    public partial class EstimatesActiveCollection : ReadOnlyList<EstimatesActive, EstimatesActiveCollection>
    {        
        public EstimatesActiveCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the EstimatesActive view.
    /// </summary>
    [Serializable]
    public partial class EstimatesActive : ReadOnlyRecord<EstimatesActive>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("EstimatesActive", TableType.View, DataService.GetInstance("Internal"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarProjectName = new TableSchema.TableColumn(schema);
                colvarProjectName.ColumnName = "ProjectName";
                colvarProjectName.DataType = DbType.AnsiString;
                colvarProjectName.MaxLength = 100;
                colvarProjectName.AutoIncrement = false;
                colvarProjectName.IsNullable = false;
                colvarProjectName.IsPrimaryKey = false;
                colvarProjectName.IsForeignKey = false;
                colvarProjectName.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectName);
                
                TableSchema.TableColumn colvarSalesperson = new TableSchema.TableColumn(schema);
                colvarSalesperson.ColumnName = "Salesperson";
                colvarSalesperson.DataType = DbType.AnsiString;
                colvarSalesperson.MaxLength = 50;
                colvarSalesperson.AutoIncrement = false;
                colvarSalesperson.IsNullable = false;
                colvarSalesperson.IsPrimaryKey = false;
                colvarSalesperson.IsForeignKey = false;
                colvarSalesperson.IsReadOnly = false;
                
                schema.Columns.Add(colvarSalesperson);
                
                TableSchema.TableColumn colvarEstimatorName = new TableSchema.TableColumn(schema);
                colvarEstimatorName.ColumnName = "EstimatorName";
                colvarEstimatorName.DataType = DbType.AnsiString;
                colvarEstimatorName.MaxLength = 50;
                colvarEstimatorName.AutoIncrement = false;
                colvarEstimatorName.IsNullable = true;
                colvarEstimatorName.IsPrimaryKey = false;
                colvarEstimatorName.IsForeignKey = false;
                colvarEstimatorName.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimatorName);
                
                TableSchema.TableColumn colvarSalespersonName = new TableSchema.TableColumn(schema);
                colvarSalespersonName.ColumnName = "SalespersonName";
                colvarSalespersonName.DataType = DbType.AnsiString;
                colvarSalespersonName.MaxLength = 50;
                colvarSalespersonName.AutoIncrement = false;
                colvarSalespersonName.IsNullable = true;
                colvarSalespersonName.IsPrimaryKey = false;
                colvarSalespersonName.IsForeignKey = false;
                colvarSalespersonName.IsReadOnly = false;
                
                schema.Columns.Add(colvarSalespersonName);
                
                TableSchema.TableColumn colvarEstimateYear = new TableSchema.TableColumn(schema);
                colvarEstimateYear.ColumnName = "EstimateYear";
                colvarEstimateYear.DataType = DbType.Int32;
                colvarEstimateYear.MaxLength = 0;
                colvarEstimateYear.AutoIncrement = false;
                colvarEstimateYear.IsNullable = true;
                colvarEstimateYear.IsPrimaryKey = false;
                colvarEstimateYear.IsForeignKey = false;
                colvarEstimateYear.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateYear);
                
                TableSchema.TableColumn colvarEstimateQTR = new TableSchema.TableColumn(schema);
                colvarEstimateQTR.ColumnName = "EstimateQTR";
                colvarEstimateQTR.DataType = DbType.AnsiString;
                colvarEstimateQTR.MaxLength = 10;
                colvarEstimateQTR.AutoIncrement = false;
                colvarEstimateQTR.IsNullable = true;
                colvarEstimateQTR.IsPrimaryKey = false;
                colvarEstimateQTR.IsForeignKey = false;
                colvarEstimateQTR.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateQTR);
                
                TableSchema.TableColumn colvarEstimateMonth = new TableSchema.TableColumn(schema);
                colvarEstimateMonth.ColumnName = "EstimateMonth";
                colvarEstimateMonth.DataType = DbType.String;
                colvarEstimateMonth.MaxLength = 30;
                colvarEstimateMonth.AutoIncrement = false;
                colvarEstimateMonth.IsNullable = true;
                colvarEstimateMonth.IsPrimaryKey = false;
                colvarEstimateMonth.IsForeignKey = false;
                colvarEstimateMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateMonth);
                
                TableSchema.TableColumn colvarProjID = new TableSchema.TableColumn(schema);
                colvarProjID.ColumnName = "ProjID";
                colvarProjID.DataType = DbType.Int32;
                colvarProjID.MaxLength = 0;
                colvarProjID.AutoIncrement = false;
                colvarProjID.IsNullable = false;
                colvarProjID.IsPrimaryKey = false;
                colvarProjID.IsForeignKey = false;
                colvarProjID.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjID);
                
                TableSchema.TableColumn colvarSalesEmail = new TableSchema.TableColumn(schema);
                colvarSalesEmail.ColumnName = "SalesEmail";
                colvarSalesEmail.DataType = DbType.AnsiString;
                colvarSalesEmail.MaxLength = 50;
                colvarSalesEmail.AutoIncrement = false;
                colvarSalesEmail.IsNullable = true;
                colvarSalesEmail.IsPrimaryKey = false;
                colvarSalesEmail.IsForeignKey = false;
                colvarSalesEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarSalesEmail);
                
                TableSchema.TableColumn colvarSalesPhone = new TableSchema.TableColumn(schema);
                colvarSalesPhone.ColumnName = "SalesPhone";
                colvarSalesPhone.DataType = DbType.AnsiString;
                colvarSalesPhone.MaxLength = 15;
                colvarSalesPhone.AutoIncrement = false;
                colvarSalesPhone.IsNullable = true;
                colvarSalesPhone.IsPrimaryKey = false;
                colvarSalesPhone.IsForeignKey = false;
                colvarSalesPhone.IsReadOnly = false;
                
                schema.Columns.Add(colvarSalesPhone);
                
                TableSchema.TableColumn colvarDisplayText = new TableSchema.TableColumn(schema);
                colvarDisplayText.ColumnName = "DisplayText";
                colvarDisplayText.DataType = DbType.AnsiString;
                colvarDisplayText.MaxLength = 203;
                colvarDisplayText.AutoIncrement = false;
                colvarDisplayText.IsNullable = false;
                colvarDisplayText.IsPrimaryKey = false;
                colvarDisplayText.IsForeignKey = false;
                colvarDisplayText.IsReadOnly = false;
                
                schema.Columns.Add(colvarDisplayText);
                
                TableSchema.TableColumn colvarHospitalClinicName = new TableSchema.TableColumn(schema);
                colvarHospitalClinicName.ColumnName = "HospitalClinicName";
                colvarHospitalClinicName.DataType = DbType.AnsiString;
                colvarHospitalClinicName.MaxLength = 1000;
                colvarHospitalClinicName.AutoIncrement = false;
                colvarHospitalClinicName.IsNullable = true;
                colvarHospitalClinicName.IsPrimaryKey = false;
                colvarHospitalClinicName.IsForeignKey = false;
                colvarHospitalClinicName.IsReadOnly = false;
                
                schema.Columns.Add(colvarHospitalClinicName);
                
                TableSchema.TableColumn colvarEstId = new TableSchema.TableColumn(schema);
                colvarEstId.ColumnName = "EstId";
                colvarEstId.DataType = DbType.Int32;
                colvarEstId.MaxLength = 0;
                colvarEstId.AutoIncrement = false;
                colvarEstId.IsNullable = false;
                colvarEstId.IsPrimaryKey = false;
                colvarEstId.IsForeignKey = false;
                colvarEstId.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstId);
                
                TableSchema.TableColumn colvarPriority = new TableSchema.TableColumn(schema);
                colvarPriority.ColumnName = "Priority";
                colvarPriority.DataType = DbType.Int32;
                colvarPriority.MaxLength = 0;
                colvarPriority.AutoIncrement = false;
                colvarPriority.IsNullable = true;
                colvarPriority.IsPrimaryKey = false;
                colvarPriority.IsForeignKey = false;
                colvarPriority.IsReadOnly = false;
                
                schema.Columns.Add(colvarPriority);
                
                TableSchema.TableColumn colvarJobName = new TableSchema.TableColumn(schema);
                colvarJobName.ColumnName = "JobName";
                colvarJobName.DataType = DbType.Int32;
                colvarJobName.MaxLength = 0;
                colvarJobName.AutoIncrement = false;
                colvarJobName.IsNullable = false;
                colvarJobName.IsPrimaryKey = false;
                colvarJobName.IsForeignKey = false;
                colvarJobName.IsReadOnly = false;
                
                schema.Columns.Add(colvarJobName);
                
                TableSchema.TableColumn colvarEstimateNumber = new TableSchema.TableColumn(schema);
                colvarEstimateNumber.ColumnName = "EstimateNumber";
                colvarEstimateNumber.DataType = DbType.AnsiString;
                colvarEstimateNumber.MaxLength = 50;
                colvarEstimateNumber.AutoIncrement = false;
                colvarEstimateNumber.IsNullable = true;
                colvarEstimateNumber.IsPrimaryKey = false;
                colvarEstimateNumber.IsForeignKey = false;
                colvarEstimateNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateNumber);
                
                TableSchema.TableColumn colvarEstimateDate = new TableSchema.TableColumn(schema);
                colvarEstimateDate.ColumnName = "EstimateDate";
                colvarEstimateDate.DataType = DbType.DateTime;
                colvarEstimateDate.MaxLength = 0;
                colvarEstimateDate.AutoIncrement = false;
                colvarEstimateDate.IsNullable = true;
                colvarEstimateDate.IsPrimaryKey = false;
                colvarEstimateDate.IsForeignKey = false;
                colvarEstimateDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateDate);
                
                TableSchema.TableColumn colvarContact = new TableSchema.TableColumn(schema);
                colvarContact.ColumnName = "Contact";
                colvarContact.DataType = DbType.AnsiString;
                colvarContact.MaxLength = 255;
                colvarContact.AutoIncrement = false;
                colvarContact.IsNullable = true;
                colvarContact.IsPrimaryKey = false;
                colvarContact.IsForeignKey = false;
                colvarContact.IsReadOnly = false;
                
                schema.Columns.Add(colvarContact);
                
                TableSchema.TableColumn colvarContactEmail = new TableSchema.TableColumn(schema);
                colvarContactEmail.ColumnName = "ContactEmail";
                colvarContactEmail.DataType = DbType.AnsiString;
                colvarContactEmail.MaxLength = 50;
                colvarContactEmail.AutoIncrement = false;
                colvarContactEmail.IsNullable = true;
                colvarContactEmail.IsPrimaryKey = false;
                colvarContactEmail.IsForeignKey = false;
                colvarContactEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarContactEmail);
                
                TableSchema.TableColumn colvarReceived = new TableSchema.TableColumn(schema);
                colvarReceived.ColumnName = "Received";
                colvarReceived.DataType = DbType.DateTime;
                colvarReceived.MaxLength = 0;
                colvarReceived.AutoIncrement = false;
                colvarReceived.IsNullable = true;
                colvarReceived.IsPrimaryKey = false;
                colvarReceived.IsForeignKey = false;
                colvarReceived.IsReadOnly = false;
                
                schema.Columns.Add(colvarReceived);
                
                TableSchema.TableColumn colvarEstimator = new TableSchema.TableColumn(schema);
                colvarEstimator.ColumnName = "Estimator";
                colvarEstimator.DataType = DbType.Int32;
                colvarEstimator.MaxLength = 0;
                colvarEstimator.AutoIncrement = false;
                colvarEstimator.IsNullable = true;
                colvarEstimator.IsPrimaryKey = false;
                colvarEstimator.IsForeignKey = false;
                colvarEstimator.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimator);
                
                TableSchema.TableColumn colvarEstimatesDirectory = new TableSchema.TableColumn(schema);
                colvarEstimatesDirectory.ColumnName = "EstimatesDirectory";
                colvarEstimatesDirectory.DataType = DbType.AnsiString;
                colvarEstimatesDirectory.MaxLength = 500;
                colvarEstimatesDirectory.AutoIncrement = false;
                colvarEstimatesDirectory.IsNullable = true;
                colvarEstimatesDirectory.IsPrimaryKey = false;
                colvarEstimatesDirectory.IsForeignKey = false;
                colvarEstimatesDirectory.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimatesDirectory);
                
                TableSchema.TableColumn colvarProspectDirectory = new TableSchema.TableColumn(schema);
                colvarProspectDirectory.ColumnName = "ProspectDirectory";
                colvarProspectDirectory.DataType = DbType.AnsiString;
                colvarProspectDirectory.MaxLength = 500;
                colvarProspectDirectory.AutoIncrement = false;
                colvarProspectDirectory.IsNullable = true;
                colvarProspectDirectory.IsPrimaryKey = false;
                colvarProspectDirectory.IsForeignKey = false;
                colvarProspectDirectory.IsReadOnly = false;
                
                schema.Columns.Add(colvarProspectDirectory);
                
                TableSchema.TableColumn colvarResponseRequestedBy = new TableSchema.TableColumn(schema);
                colvarResponseRequestedBy.ColumnName = "ResponseRequestedBy";
                colvarResponseRequestedBy.DataType = DbType.DateTime;
                colvarResponseRequestedBy.MaxLength = 0;
                colvarResponseRequestedBy.AutoIncrement = false;
                colvarResponseRequestedBy.IsNullable = true;
                colvarResponseRequestedBy.IsPrimaryKey = false;
                colvarResponseRequestedBy.IsForeignKey = false;
                colvarResponseRequestedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarResponseRequestedBy);
                
                TableSchema.TableColumn colvarEstimateSent = new TableSchema.TableColumn(schema);
                colvarEstimateSent.ColumnName = "EstimateSent";
                colvarEstimateSent.DataType = DbType.Boolean;
                colvarEstimateSent.MaxLength = 0;
                colvarEstimateSent.AutoIncrement = false;
                colvarEstimateSent.IsNullable = false;
                colvarEstimateSent.IsPrimaryKey = false;
                colvarEstimateSent.IsForeignKey = false;
                colvarEstimateSent.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateSent);
                
                TableSchema.TableColumn colvarEstimateSentDate = new TableSchema.TableColumn(schema);
                colvarEstimateSentDate.ColumnName = "EstimateSentDate";
                colvarEstimateSentDate.DataType = DbType.DateTime;
                colvarEstimateSentDate.MaxLength = 0;
                colvarEstimateSentDate.AutoIncrement = false;
                colvarEstimateSentDate.IsNullable = true;
                colvarEstimateSentDate.IsPrimaryKey = false;
                colvarEstimateSentDate.IsForeignKey = false;
                colvarEstimateSentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateSentDate);
                
                TableSchema.TableColumn colvarEstimateTotal = new TableSchema.TableColumn(schema);
                colvarEstimateTotal.ColumnName = "EstimateTotal";
                colvarEstimateTotal.DataType = DbType.Currency;
                colvarEstimateTotal.MaxLength = 0;
                colvarEstimateTotal.AutoIncrement = false;
                colvarEstimateTotal.IsNullable = true;
                colvarEstimateTotal.IsPrimaryKey = false;
                colvarEstimateTotal.IsForeignKey = false;
                colvarEstimateTotal.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateTotal);
                
                TableSchema.TableColumn colvarDoorsTotal = new TableSchema.TableColumn(schema);
                colvarDoorsTotal.ColumnName = "DoorsTotal";
                colvarDoorsTotal.DataType = DbType.Currency;
                colvarDoorsTotal.MaxLength = 0;
                colvarDoorsTotal.AutoIncrement = false;
                colvarDoorsTotal.IsNullable = true;
                colvarDoorsTotal.IsPrimaryKey = false;
                colvarDoorsTotal.IsForeignKey = false;
                colvarDoorsTotal.IsReadOnly = false;
                
                schema.Columns.Add(colvarDoorsTotal);
                
                TableSchema.TableColumn colvarInteriorsTotal = new TableSchema.TableColumn(schema);
                colvarInteriorsTotal.ColumnName = "InteriorsTotal";
                colvarInteriorsTotal.DataType = DbType.Currency;
                colvarInteriorsTotal.MaxLength = 0;
                colvarInteriorsTotal.AutoIncrement = false;
                colvarInteriorsTotal.IsNullable = true;
                colvarInteriorsTotal.IsPrimaryKey = false;
                colvarInteriorsTotal.IsForeignKey = false;
                colvarInteriorsTotal.IsReadOnly = false;
                
                schema.Columns.Add(colvarInteriorsTotal);
                
                TableSchema.TableColumn colvarBunkerTotal = new TableSchema.TableColumn(schema);
                colvarBunkerTotal.ColumnName = "BunkerTotal";
                colvarBunkerTotal.DataType = DbType.Currency;
                colvarBunkerTotal.MaxLength = 0;
                colvarBunkerTotal.AutoIncrement = false;
                colvarBunkerTotal.IsNullable = true;
                colvarBunkerTotal.IsPrimaryKey = false;
                colvarBunkerTotal.IsForeignKey = false;
                colvarBunkerTotal.IsReadOnly = false;
                
                schema.Columns.Add(colvarBunkerTotal);
                
                TableSchema.TableColumn colvarCurrentStatus = new TableSchema.TableColumn(schema);
                colvarCurrentStatus.ColumnName = "CurrentStatus";
                colvarCurrentStatus.DataType = DbType.AnsiString;
                colvarCurrentStatus.MaxLength = -1;
                colvarCurrentStatus.AutoIncrement = false;
                colvarCurrentStatus.IsNullable = true;
                colvarCurrentStatus.IsPrimaryKey = false;
                colvarCurrentStatus.IsForeignKey = false;
                colvarCurrentStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentStatus);
                
                TableSchema.TableColumn colvarDoorScope = new TableSchema.TableColumn(schema);
                colvarDoorScope.ColumnName = "DoorScope";
                colvarDoorScope.DataType = DbType.AnsiString;
                colvarDoorScope.MaxLength = 1000;
                colvarDoorScope.AutoIncrement = false;
                colvarDoorScope.IsNullable = true;
                colvarDoorScope.IsPrimaryKey = false;
                colvarDoorScope.IsForeignKey = false;
                colvarDoorScope.IsReadOnly = false;
                
                schema.Columns.Add(colvarDoorScope);
                
                TableSchema.TableColumn colvarInteriorScope = new TableSchema.TableColumn(schema);
                colvarInteriorScope.ColumnName = "InteriorScope";
                colvarInteriorScope.DataType = DbType.AnsiString;
                colvarInteriorScope.MaxLength = 1000;
                colvarInteriorScope.AutoIncrement = false;
                colvarInteriorScope.IsNullable = true;
                colvarInteriorScope.IsPrimaryKey = false;
                colvarInteriorScope.IsForeignKey = false;
                colvarInteriorScope.IsReadOnly = false;
                
                schema.Columns.Add(colvarInteriorScope);
                
                TableSchema.TableColumn colvarBunkerScope = new TableSchema.TableColumn(schema);
                colvarBunkerScope.ColumnName = "BunkerScope";
                colvarBunkerScope.DataType = DbType.AnsiString;
                colvarBunkerScope.MaxLength = 1000;
                colvarBunkerScope.AutoIncrement = false;
                colvarBunkerScope.IsNullable = true;
                colvarBunkerScope.IsPrimaryKey = false;
                colvarBunkerScope.IsForeignKey = false;
                colvarBunkerScope.IsReadOnly = false;
                
                schema.Columns.Add(colvarBunkerScope);
                
                TableSchema.TableColumn colvarBunkerTitle = new TableSchema.TableColumn(schema);
                colvarBunkerTitle.ColumnName = "BunkerTitle";
                colvarBunkerTitle.DataType = DbType.AnsiString;
                colvarBunkerTitle.MaxLength = 100;
                colvarBunkerTitle.AutoIncrement = false;
                colvarBunkerTitle.IsNullable = true;
                colvarBunkerTitle.IsPrimaryKey = false;
                colvarBunkerTitle.IsForeignKey = false;
                colvarBunkerTitle.IsReadOnly = false;
                
                schema.Columns.Add(colvarBunkerTitle);
                
                TableSchema.TableColumn colvarDesignBasis = new TableSchema.TableColumn(schema);
                colvarDesignBasis.ColumnName = "DesignBasis";
                colvarDesignBasis.DataType = DbType.AnsiString;
                colvarDesignBasis.MaxLength = -1;
                colvarDesignBasis.AutoIncrement = false;
                colvarDesignBasis.IsNullable = true;
                colvarDesignBasis.IsPrimaryKey = false;
                colvarDesignBasis.IsForeignKey = false;
                colvarDesignBasis.IsReadOnly = false;
                
                schema.Columns.Add(colvarDesignBasis);
                
                TableSchema.TableColumn colvarLaborType = new TableSchema.TableColumn(schema);
                colvarLaborType.ColumnName = "LaborType";
                colvarLaborType.DataType = DbType.AnsiString;
                colvarLaborType.MaxLength = 15;
                colvarLaborType.AutoIncrement = false;
                colvarLaborType.IsNullable = true;
                colvarLaborType.IsPrimaryKey = false;
                colvarLaborType.IsForeignKey = false;
                colvarLaborType.IsReadOnly = false;
                
                schema.Columns.Add(colvarLaborType);
                
                TableSchema.TableColumn colvarPhysicsBasis = new TableSchema.TableColumn(schema);
                colvarPhysicsBasis.ColumnName = "PhysicsBasis";
                colvarPhysicsBasis.DataType = DbType.AnsiString;
                colvarPhysicsBasis.MaxLength = -1;
                colvarPhysicsBasis.AutoIncrement = false;
                colvarPhysicsBasis.IsNullable = true;
                colvarPhysicsBasis.IsPrimaryKey = false;
                colvarPhysicsBasis.IsForeignKey = false;
                colvarPhysicsBasis.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhysicsBasis);
                
                TableSchema.TableColumn colvarBunkerClarifications = new TableSchema.TableColumn(schema);
                colvarBunkerClarifications.ColumnName = "BunkerClarifications";
                colvarBunkerClarifications.DataType = DbType.AnsiString;
                colvarBunkerClarifications.MaxLength = -1;
                colvarBunkerClarifications.AutoIncrement = false;
                colvarBunkerClarifications.IsNullable = true;
                colvarBunkerClarifications.IsPrimaryKey = false;
                colvarBunkerClarifications.IsForeignKey = false;
                colvarBunkerClarifications.IsReadOnly = false;
                
                schema.Columns.Add(colvarBunkerClarifications);
                
                TableSchema.TableColumn colvarProjectNumber = new TableSchema.TableColumn(schema);
                colvarProjectNumber.ColumnName = "ProjectNumber";
                colvarProjectNumber.DataType = DbType.AnsiString;
                colvarProjectNumber.MaxLength = 100;
                colvarProjectNumber.AutoIncrement = false;
                colvarProjectNumber.IsNullable = false;
                colvarProjectNumber.IsPrimaryKey = false;
                colvarProjectNumber.IsForeignKey = false;
                colvarProjectNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectNumber);
                
                TableSchema.TableColumn colvarEstimatorEmail = new TableSchema.TableColumn(schema);
                colvarEstimatorEmail.ColumnName = "EstimatorEmail";
                colvarEstimatorEmail.DataType = DbType.AnsiString;
                colvarEstimatorEmail.MaxLength = 50;
                colvarEstimatorEmail.AutoIncrement = false;
                colvarEstimatorEmail.IsNullable = true;
                colvarEstimatorEmail.IsPrimaryKey = false;
                colvarEstimatorEmail.IsForeignKey = false;
                colvarEstimatorEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimatorEmail);
                
                TableSchema.TableColumn colvarBidDueDate = new TableSchema.TableColumn(schema);
                colvarBidDueDate.ColumnName = "BidDueDate";
                colvarBidDueDate.DataType = DbType.DateTime;
                colvarBidDueDate.MaxLength = 0;
                colvarBidDueDate.AutoIncrement = false;
                colvarBidDueDate.IsNullable = true;
                colvarBidDueDate.IsPrimaryKey = false;
                colvarBidDueDate.IsForeignKey = false;
                colvarBidDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarBidDueDate);
                
                TableSchema.TableColumn colvarStepID = new TableSchema.TableColumn(schema);
                colvarStepID.ColumnName = "StepID";
                colvarStepID.DataType = DbType.Int32;
                colvarStepID.MaxLength = 0;
                colvarStepID.AutoIncrement = false;
                colvarStepID.IsNullable = false;
                colvarStepID.IsPrimaryKey = false;
                colvarStepID.IsForeignKey = false;
                colvarStepID.IsReadOnly = false;
                
                schema.Columns.Add(colvarStepID);
                
                TableSchema.TableColumn colvarStatusID = new TableSchema.TableColumn(schema);
                colvarStatusID.ColumnName = "StatusID";
                colvarStatusID.DataType = DbType.Int32;
                colvarStatusID.MaxLength = 0;
                colvarStatusID.AutoIncrement = false;
                colvarStatusID.IsNullable = false;
                colvarStatusID.IsPrimaryKey = false;
                colvarStatusID.IsForeignKey = false;
                colvarStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatusID);
                
                TableSchema.TableColumn colvarReadyForEstimating = new TableSchema.TableColumn(schema);
                colvarReadyForEstimating.ColumnName = "ReadyForEstimating";
                colvarReadyForEstimating.DataType = DbType.Boolean;
                colvarReadyForEstimating.MaxLength = 0;
                colvarReadyForEstimating.AutoIncrement = false;
                colvarReadyForEstimating.IsNullable = false;
                colvarReadyForEstimating.IsPrimaryKey = false;
                colvarReadyForEstimating.IsForeignKey = false;
                colvarReadyForEstimating.IsReadOnly = false;
                
                schema.Columns.Add(colvarReadyForEstimating);
                
                TableSchema.TableColumn colvarSupplementalBlockCount = new TableSchema.TableColumn(schema);
                colvarSupplementalBlockCount.ColumnName = "SupplementalBlockCount";
                colvarSupplementalBlockCount.DataType = DbType.Int32;
                colvarSupplementalBlockCount.MaxLength = 0;
                colvarSupplementalBlockCount.AutoIncrement = false;
                colvarSupplementalBlockCount.IsNullable = true;
                colvarSupplementalBlockCount.IsPrimaryKey = false;
                colvarSupplementalBlockCount.IsForeignKey = false;
                colvarSupplementalBlockCount.IsReadOnly = false;
                
                schema.Columns.Add(colvarSupplementalBlockCount);
                
                TableSchema.TableColumn colvarInteriorsQty = new TableSchema.TableColumn(schema);
                colvarInteriorsQty.ColumnName = "InteriorsQty";
                colvarInteriorsQty.DataType = DbType.Int32;
                colvarInteriorsQty.MaxLength = 0;
                colvarInteriorsQty.AutoIncrement = false;
                colvarInteriorsQty.IsNullable = true;
                colvarInteriorsQty.IsPrimaryKey = false;
                colvarInteriorsQty.IsForeignKey = false;
                colvarInteriorsQty.IsReadOnly = false;
                
                schema.Columns.Add(colvarInteriorsQty);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["Internal"].AddSchema("EstimatesActive",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public EstimatesActive()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public EstimatesActive(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public EstimatesActive(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public EstimatesActive(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ProjectName")]
        [Bindable(true)]
        public string ProjectName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectName");
		    }
            set 
		    {
			    SetColumnValue("ProjectName", value);
            }
        }
	      
        [XmlAttribute("Salesperson")]
        [Bindable(true)]
        public string Salesperson 
	    {
		    get
		    {
			    return GetColumnValue<string>("Salesperson");
		    }
            set 
		    {
			    SetColumnValue("Salesperson", value);
            }
        }
	      
        [XmlAttribute("EstimatorName")]
        [Bindable(true)]
        public string EstimatorName 
	    {
		    get
		    {
			    return GetColumnValue<string>("EstimatorName");
		    }
            set 
		    {
			    SetColumnValue("EstimatorName", value);
            }
        }
	      
        [XmlAttribute("SalespersonName")]
        [Bindable(true)]
        public string SalespersonName 
	    {
		    get
		    {
			    return GetColumnValue<string>("SalespersonName");
		    }
            set 
		    {
			    SetColumnValue("SalespersonName", value);
            }
        }
	      
        [XmlAttribute("EstimateYear")]
        [Bindable(true)]
        public int? EstimateYear 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EstimateYear");
		    }
            set 
		    {
			    SetColumnValue("EstimateYear", value);
            }
        }
	      
        [XmlAttribute("EstimateQTR")]
        [Bindable(true)]
        public string EstimateQTR 
	    {
		    get
		    {
			    return GetColumnValue<string>("EstimateQTR");
		    }
            set 
		    {
			    SetColumnValue("EstimateQTR", value);
            }
        }
	      
        [XmlAttribute("EstimateMonth")]
        [Bindable(true)]
        public string EstimateMonth 
	    {
		    get
		    {
			    return GetColumnValue<string>("EstimateMonth");
		    }
            set 
		    {
			    SetColumnValue("EstimateMonth", value);
            }
        }
	      
        [XmlAttribute("ProjID")]
        [Bindable(true)]
        public int ProjID 
	    {
		    get
		    {
			    return GetColumnValue<int>("ProjID");
		    }
            set 
		    {
			    SetColumnValue("ProjID", value);
            }
        }
	      
        [XmlAttribute("SalesEmail")]
        [Bindable(true)]
        public string SalesEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("SalesEmail");
		    }
            set 
		    {
			    SetColumnValue("SalesEmail", value);
            }
        }
	      
        [XmlAttribute("SalesPhone")]
        [Bindable(true)]
        public string SalesPhone 
	    {
		    get
		    {
			    return GetColumnValue<string>("SalesPhone");
		    }
            set 
		    {
			    SetColumnValue("SalesPhone", value);
            }
        }
	      
        [XmlAttribute("DisplayText")]
        [Bindable(true)]
        public string DisplayText 
	    {
		    get
		    {
			    return GetColumnValue<string>("DisplayText");
		    }
            set 
		    {
			    SetColumnValue("DisplayText", value);
            }
        }
	      
        [XmlAttribute("HospitalClinicName")]
        [Bindable(true)]
        public string HospitalClinicName 
	    {
		    get
		    {
			    return GetColumnValue<string>("HospitalClinicName");
		    }
            set 
		    {
			    SetColumnValue("HospitalClinicName", value);
            }
        }
	      
        [XmlAttribute("EstId")]
        [Bindable(true)]
        public int EstId 
	    {
		    get
		    {
			    return GetColumnValue<int>("EstId");
		    }
            set 
		    {
			    SetColumnValue("EstId", value);
            }
        }
	      
        [XmlAttribute("Priority")]
        [Bindable(true)]
        public int? Priority 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Priority");
		    }
            set 
		    {
			    SetColumnValue("Priority", value);
            }
        }
	      
        [XmlAttribute("JobName")]
        [Bindable(true)]
        public int JobName 
	    {
		    get
		    {
			    return GetColumnValue<int>("JobName");
		    }
            set 
		    {
			    SetColumnValue("JobName", value);
            }
        }
	      
        [XmlAttribute("EstimateNumber")]
        [Bindable(true)]
        public string EstimateNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("EstimateNumber");
		    }
            set 
		    {
			    SetColumnValue("EstimateNumber", value);
            }
        }
	      
        [XmlAttribute("EstimateDate")]
        [Bindable(true)]
        public DateTime? EstimateDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EstimateDate");
		    }
            set 
		    {
			    SetColumnValue("EstimateDate", value);
            }
        }
	      
        [XmlAttribute("Contact")]
        [Bindable(true)]
        public string Contact 
	    {
		    get
		    {
			    return GetColumnValue<string>("Contact");
		    }
            set 
		    {
			    SetColumnValue("Contact", value);
            }
        }
	      
        [XmlAttribute("ContactEmail")]
        [Bindable(true)]
        public string ContactEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("ContactEmail");
		    }
            set 
		    {
			    SetColumnValue("ContactEmail", value);
            }
        }
	      
        [XmlAttribute("Received")]
        [Bindable(true)]
        public DateTime? Received 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Received");
		    }
            set 
		    {
			    SetColumnValue("Received", value);
            }
        }
	      
        [XmlAttribute("Estimator")]
        [Bindable(true)]
        public int? Estimator 
	    {
		    get
		    {
			    return GetColumnValue<int?>("Estimator");
		    }
            set 
		    {
			    SetColumnValue("Estimator", value);
            }
        }
	      
        [XmlAttribute("EstimatesDirectory")]
        [Bindable(true)]
        public string EstimatesDirectory 
	    {
		    get
		    {
			    return GetColumnValue<string>("EstimatesDirectory");
		    }
            set 
		    {
			    SetColumnValue("EstimatesDirectory", value);
            }
        }
	      
        [XmlAttribute("ProspectDirectory")]
        [Bindable(true)]
        public string ProspectDirectory 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProspectDirectory");
		    }
            set 
		    {
			    SetColumnValue("ProspectDirectory", value);
            }
        }
	      
        [XmlAttribute("ResponseRequestedBy")]
        [Bindable(true)]
        public DateTime? ResponseRequestedBy 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ResponseRequestedBy");
		    }
            set 
		    {
			    SetColumnValue("ResponseRequestedBy", value);
            }
        }
	      
        [XmlAttribute("EstimateSent")]
        [Bindable(true)]
        public bool EstimateSent 
	    {
		    get
		    {
			    return GetColumnValue<bool>("EstimateSent");
		    }
            set 
		    {
			    SetColumnValue("EstimateSent", value);
            }
        }
	      
        [XmlAttribute("EstimateSentDate")]
        [Bindable(true)]
        public DateTime? EstimateSentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EstimateSentDate");
		    }
            set 
		    {
			    SetColumnValue("EstimateSentDate", value);
            }
        }
	      
        [XmlAttribute("EstimateTotal")]
        [Bindable(true)]
        public decimal? EstimateTotal 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("EstimateTotal");
		    }
            set 
		    {
			    SetColumnValue("EstimateTotal", value);
            }
        }
	      
        [XmlAttribute("DoorsTotal")]
        [Bindable(true)]
        public decimal? DoorsTotal 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("DoorsTotal");
		    }
            set 
		    {
			    SetColumnValue("DoorsTotal", value);
            }
        }
	      
        [XmlAttribute("InteriorsTotal")]
        [Bindable(true)]
        public decimal? InteriorsTotal 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("InteriorsTotal");
		    }
            set 
		    {
			    SetColumnValue("InteriorsTotal", value);
            }
        }
	      
        [XmlAttribute("BunkerTotal")]
        [Bindable(true)]
        public decimal? BunkerTotal 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("BunkerTotal");
		    }
            set 
		    {
			    SetColumnValue("BunkerTotal", value);
            }
        }
	      
        [XmlAttribute("CurrentStatus")]
        [Bindable(true)]
        public string CurrentStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("CurrentStatus");
		    }
            set 
		    {
			    SetColumnValue("CurrentStatus", value);
            }
        }
	      
        [XmlAttribute("DoorScope")]
        [Bindable(true)]
        public string DoorScope 
	    {
		    get
		    {
			    return GetColumnValue<string>("DoorScope");
		    }
            set 
		    {
			    SetColumnValue("DoorScope", value);
            }
        }
	      
        [XmlAttribute("InteriorScope")]
        [Bindable(true)]
        public string InteriorScope 
	    {
		    get
		    {
			    return GetColumnValue<string>("InteriorScope");
		    }
            set 
		    {
			    SetColumnValue("InteriorScope", value);
            }
        }
	      
        [XmlAttribute("BunkerScope")]
        [Bindable(true)]
        public string BunkerScope 
	    {
		    get
		    {
			    return GetColumnValue<string>("BunkerScope");
		    }
            set 
		    {
			    SetColumnValue("BunkerScope", value);
            }
        }
	      
        [XmlAttribute("BunkerTitle")]
        [Bindable(true)]
        public string BunkerTitle 
	    {
		    get
		    {
			    return GetColumnValue<string>("BunkerTitle");
		    }
            set 
		    {
			    SetColumnValue("BunkerTitle", value);
            }
        }
	      
        [XmlAttribute("DesignBasis")]
        [Bindable(true)]
        public string DesignBasis 
	    {
		    get
		    {
			    return GetColumnValue<string>("DesignBasis");
		    }
            set 
		    {
			    SetColumnValue("DesignBasis", value);
            }
        }
	      
        [XmlAttribute("LaborType")]
        [Bindable(true)]
        public string LaborType 
	    {
		    get
		    {
			    return GetColumnValue<string>("LaborType");
		    }
            set 
		    {
			    SetColumnValue("LaborType", value);
            }
        }
	      
        [XmlAttribute("PhysicsBasis")]
        [Bindable(true)]
        public string PhysicsBasis 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhysicsBasis");
		    }
            set 
		    {
			    SetColumnValue("PhysicsBasis", value);
            }
        }
	      
        [XmlAttribute("BunkerClarifications")]
        [Bindable(true)]
        public string BunkerClarifications 
	    {
		    get
		    {
			    return GetColumnValue<string>("BunkerClarifications");
		    }
            set 
		    {
			    SetColumnValue("BunkerClarifications", value);
            }
        }
	      
        [XmlAttribute("ProjectNumber")]
        [Bindable(true)]
        public string ProjectNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectNumber");
		    }
            set 
		    {
			    SetColumnValue("ProjectNumber", value);
            }
        }
	      
        [XmlAttribute("EstimatorEmail")]
        [Bindable(true)]
        public string EstimatorEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("EstimatorEmail");
		    }
            set 
		    {
			    SetColumnValue("EstimatorEmail", value);
            }
        }
	      
        [XmlAttribute("BidDueDate")]
        [Bindable(true)]
        public DateTime? BidDueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("BidDueDate");
		    }
            set 
		    {
			    SetColumnValue("BidDueDate", value);
            }
        }
	      
        [XmlAttribute("StepID")]
        [Bindable(true)]
        public int StepID 
	    {
		    get
		    {
			    return GetColumnValue<int>("StepID");
		    }
            set 
		    {
			    SetColumnValue("StepID", value);
            }
        }
	      
        [XmlAttribute("StatusID")]
        [Bindable(true)]
        public int StatusID 
	    {
		    get
		    {
			    return GetColumnValue<int>("StatusID");
		    }
            set 
		    {
			    SetColumnValue("StatusID", value);
            }
        }
	      
        [XmlAttribute("ReadyForEstimating")]
        [Bindable(true)]
        public bool ReadyForEstimating 
	    {
		    get
		    {
			    return GetColumnValue<bool>("ReadyForEstimating");
		    }
            set 
		    {
			    SetColumnValue("ReadyForEstimating", value);
            }
        }
	      
        [XmlAttribute("SupplementalBlockCount")]
        [Bindable(true)]
        public int? SupplementalBlockCount 
	    {
		    get
		    {
			    return GetColumnValue<int?>("SupplementalBlockCount");
		    }
            set 
		    {
			    SetColumnValue("SupplementalBlockCount", value);
            }
        }
	      
        [XmlAttribute("InteriorsQty")]
        [Bindable(true)]
        public int? InteriorsQty 
	    {
		    get
		    {
			    return GetColumnValue<int?>("InteriorsQty");
		    }
            set 
		    {
			    SetColumnValue("InteriorsQty", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ProjectName = @"ProjectName";
            
            public static string Salesperson = @"Salesperson";
            
            public static string EstimatorName = @"EstimatorName";
            
            public static string SalespersonName = @"SalespersonName";
            
            public static string EstimateYear = @"EstimateYear";
            
            public static string EstimateQTR = @"EstimateQTR";
            
            public static string EstimateMonth = @"EstimateMonth";
            
            public static string ProjID = @"ProjID";
            
            public static string SalesEmail = @"SalesEmail";
            
            public static string SalesPhone = @"SalesPhone";
            
            public static string DisplayText = @"DisplayText";
            
            public static string HospitalClinicName = @"HospitalClinicName";
            
            public static string EstId = @"EstId";
            
            public static string Priority = @"Priority";
            
            public static string JobName = @"JobName";
            
            public static string EstimateNumber = @"EstimateNumber";
            
            public static string EstimateDate = @"EstimateDate";
            
            public static string Contact = @"Contact";
            
            public static string ContactEmail = @"ContactEmail";
            
            public static string Received = @"Received";
            
            public static string Estimator = @"Estimator";
            
            public static string EstimatesDirectory = @"EstimatesDirectory";
            
            public static string ProspectDirectory = @"ProspectDirectory";
            
            public static string ResponseRequestedBy = @"ResponseRequestedBy";
            
            public static string EstimateSent = @"EstimateSent";
            
            public static string EstimateSentDate = @"EstimateSentDate";
            
            public static string EstimateTotal = @"EstimateTotal";
            
            public static string DoorsTotal = @"DoorsTotal";
            
            public static string InteriorsTotal = @"InteriorsTotal";
            
            public static string BunkerTotal = @"BunkerTotal";
            
            public static string CurrentStatus = @"CurrentStatus";
            
            public static string DoorScope = @"DoorScope";
            
            public static string InteriorScope = @"InteriorScope";
            
            public static string BunkerScope = @"BunkerScope";
            
            public static string BunkerTitle = @"BunkerTitle";
            
            public static string DesignBasis = @"DesignBasis";
            
            public static string LaborType = @"LaborType";
            
            public static string PhysicsBasis = @"PhysicsBasis";
            
            public static string BunkerClarifications = @"BunkerClarifications";
            
            public static string ProjectNumber = @"ProjectNumber";
            
            public static string EstimatorEmail = @"EstimatorEmail";
            
            public static string BidDueDate = @"BidDueDate";
            
            public static string StepID = @"StepID";
            
            public static string StatusID = @"StatusID";
            
            public static string ReadyForEstimating = @"ReadyForEstimating";
            
            public static string SupplementalBlockCount = @"SupplementalBlockCount";
            
            public static string InteriorsQty = @"InteriorsQty";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
