using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL{
    public partial class SPs{
        
        /// <summary>
        /// Creates an object wrapper for the EstimatesReceivedLastWeek Procedure
        /// </summary>
        public static StoredProcedure EstimatesReceivedLastWeek()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("EstimatesReceivedLastWeek", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the EstimatesSentLastWeek Procedure
        /// </summary>
        public static StoredProcedure EstimatesSentLastWeek()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("EstimatesSentLastWeek", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the EstimatesSentThisWeek Procedure
        /// </summary>
        public static StoredProcedure EstimatesSentThisWeek()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("EstimatesSentThisWeek", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetMaxPaymentID Procedure
        /// </summary>
        public static StoredProcedure GetMaxPaymentID()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetMaxPaymentID", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetMaxPaymentScheduleID Procedure
        /// </summary>
        public static StoredProcedure GetMaxPaymentScheduleID()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetMaxPaymentScheduleID", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetMaxProductionID Procedure
        /// </summary>
        public static StoredProcedure GetMaxProductionID()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetMaxProductionID", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetMaxProjectID Procedure
        /// </summary>
        public static StoredProcedure GetMaxProjectID()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetMaxProjectID", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetMaxRoomID Procedure
        /// </summary>
        public static StoredProcedure GetMaxRoomID()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetMaxRoomID", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetNextProjectNumber Procedure
        /// </summary>
        public static StoredProcedure GetNextProjectNumber()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetNextProjectNumber", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the InsertGenerator Procedure
        /// </summary>
        public static StoredProcedure InsertGenerator(string tableName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("InsertGenerator", DataService.GetInstance("Internal"), "dbo");
        	
            sp.Command.AddParameter("@tableName", tableName, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the rpt_BillOfLadingByBOLID Procedure
        /// </summary>
        public static StoredProcedure RptBillOfLadingByBOLID(int? BOLID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("rpt_BillOfLadingByBOLID", DataService.GetInstance("Internal"), "dbo");
        	
            sp.Command.AddParameter("@BOLID", BOLID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the rpt_BillOfLadingSubCarrierInfo Procedure
        /// </summary>
        public static StoredProcedure RptBillOfLadingSubCarrierInfo(int? BOLID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("rpt_BillOfLadingSubCarrierInfo", DataService.GetInstance("Internal"), "dbo");
        	
            sp.Command.AddParameter("@BOLID", BOLID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the rpt_RFIDetails Procedure
        /// </summary>
        public static StoredProcedure RptRFIDetails()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("rpt_RFIDetails", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the rpt_UnprocessedBillsOfLading Procedure
        /// </summary>
        public static StoredProcedure RptUnprocessedBillsOfLading()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("rpt_UnprocessedBillsOfLading", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spr_DeletePaymentItemsByPmtID Procedure
        /// </summary>
        public static StoredProcedure SprDeletePaymentItemsByPmtID(string PaymentIDList)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spr_DeletePaymentItemsByPmtID", DataService.GetInstance("Internal"), "dbo");
        	
            sp.Command.AddParameter("@PaymentIDList", PaymentIDList, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spr_GetPaymentScheduleByID Procedure
        /// </summary>
        public static StoredProcedure SprGetPaymentScheduleByID(int? ScheduleID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spr_GetPaymentScheduleByID", DataService.GetInstance("Internal"), "dbo");
        	
            sp.Command.AddParameter("@ScheduleID", ScheduleID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spr_GetPaymentScheduleInfo_Display Procedure
        /// </summary>
        public static StoredProcedure SprGetPaymentScheduleInfoDisplay()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spr_GetPaymentScheduleInfo_Display", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spr_GetPaymentScheduleVersionsByProject Procedure
        /// </summary>
        public static StoredProcedure SprGetPaymentScheduleVersionsByProject(int? ProjectID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spr_GetPaymentScheduleVersionsByProject", DataService.GetInstance("Internal"), "dbo");
        	
            sp.Command.AddParameter("@ProjectID", ProjectID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spr_GetProductionData Procedure
        /// </summary>
        public static StoredProcedure SprGetProductionData()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spr_GetProductionData", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spr_GetProjectInfo_Display Procedure
        /// </summary>
        public static StoredProcedure SprGetProjectInfoDisplay()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spr_GetProjectInfo_Display", DataService.GetInstance("Internal"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spr_PrepPPSReport Procedure
        /// </summary>
        public static StoredProcedure SprPrepPPSReport(int? ScheduleID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spr_PrepPPSReport", DataService.GetInstance("Internal"), "dbo");
        	
            sp.Command.AddParameter("@ScheduleID", ScheduleID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the spr_SavePaymentSchedule Procedure
        /// </summary>
        public static StoredProcedure SprSavePaymentSchedule(int? ProjectID, decimal? ContractValue, decimal? DepositAmount, string ProjectName, string ProjectNumber, string BillingInterval, int? DepositPercentage, int? MaterialsRetention, DateTime? RetentionReleaseDate, int? InstallRetention, DateTime? BillingStartDate, DateTime? InstallationStartDate, DateTime? InstallationCompleteDate, string Terms, string CalculationMethod, int? ScheduleVersion, DateTime? DateCreated, string CreatedBy, string ProjectStatus)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("spr_SavePaymentSchedule", DataService.GetInstance("Internal"), "dbo");
        	
            sp.Command.AddParameter("@ProjectID", ProjectID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ContractValue", ContractValue, DbType.Currency, 4, 19);
        	
            sp.Command.AddParameter("@DepositAmount", DepositAmount, DbType.Currency, 4, 19);
        	
            sp.Command.AddParameter("@ProjectName", ProjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ProjectNumber", ProjectNumber, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@BillingInterval", BillingInterval, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@DepositPercentage", DepositPercentage, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@MaterialsRetention", MaterialsRetention, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@RetentionReleaseDate", RetentionReleaseDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@InstallRetention", InstallRetention, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@BillingStartDate", BillingStartDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@InstallationStartDate", InstallationStartDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@InstallationCompleteDate", InstallationCompleteDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@Terms", Terms, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@CalculationMethod", CalculationMethod, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ScheduleVersion", ScheduleVersion, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@DateCreated", DateCreated, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@CreatedBy", CreatedBy, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ProjectStatus", ProjectStatus, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
    }
    
}
